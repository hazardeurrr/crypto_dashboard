{"version":3,"sources":["../../../shared/components/utility/helper-text.js","../../../shared/containers/Chat/Messages.js","../../../shared/containers/Chat/ComposeMessage.js","../../../shared/containers/Chat/AddNewUser.js","../../../shared/containers/Chat/ChatRooms.js","../../../shared/components/Chat/ViewProfile.style.js","../../../shared/components/Chat/ViewProfile.js","../../../shared/components/Chat/InputName.style.js","../../../shared/components/Chat/InputName.js","../../../shared/containers/Chat/MobileView.js","../../../shared/components/Notification.js","../../../shared/components/uielements/styles/radiobox.style.js","../../../shared/components/uielements/radio.js","../../../shared/components/uielements/styles/autoComplete.style.js","../../../shared/components/uielements/autocomplete.js","../../../shared/components/uielements/styles/datePicker.style.js","../../../shared/components/uielements/datePicker.js"],"names":["text","className","style","display","alignItems","justifyContent","width","padding","toggleViewProfile","chatActions","toggleMobileProfile","Messages","dispatch","useDispatch","useSelector","state","Chat","user","userId","selectedChatRoom","messages","React","useEffect","messageChat","document","getElementById","scrollTop","scrollHeight","scrollToBottom","id","map","message","isUser","sender","messageUser","otherUserInfo","key","messageTime","timeDifference","alt","src","profileImageUrl","onClick","sendMessage","actions","ComposeMessage","props","useState","value","setValue","autoSize","autosize","onChange","event","target","onKeyPress","preventDefault","length","notification","placeholder","showButton","type","updateNewUsersProp","addNewUser","AddNewUser","users","addNewUsersProp","handleCancel","modalActive","name","dob","mobileNo","gender","language","placement","title","size","Modal","visible","onClose","okText","onOk","newUser","findIndex","toLowerCase","onCancel","label","allowClear","format","moment","date","dateString","setSelectedChatroom","toggleMobileList","toggleCompose","filteredChatRooms","chatrooms","filter","chatroom","lastMessageTime","ChatRooms","chatRooms","view","App","currentChatRooms","setCurrentChatRooms","currentChatRoom","searchedChatRooms","trim","chatRoom","includes","height","index","lastMessage","selected","background","stopPropagation","ViewProfileWrapper","styled","div","palette","SingleInfoWrapper","SingleInfo","viewProfile","UserItem","result","setState","onSelect","forEach","onSearch","indexOf","push","marginBottom","setComposedId","chatInit","mobileActiveList","mobileActiveProfile","MobileView","loading","openCompose","CurrentView","footer","minRows","maxRows","rows","InputProps","disableUnderline","createNotification","description","AntRadiobox","ComponentName","RadioBox","RadioGroup","Group","Button","WDAutoCompletes","AutoCompletes","WithDirection","AutoCompleteOption","Option","AntDatePicker","borderRadius","transition","Datepicker","DateRangepicker","RangePicker"],"mappings":"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","file":"static/js/86.7cd912ad.chunk.js","sourcesContent":["import React from 'react';\n\nexport default ({ text = '' }) => (\n  <div\n    className=\"isoHelperText\"\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      padding: '20px',\n    }}\n  >\n    <h3>{text}</h3>\n  </div>\n);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { MessageSingle, MessageChatWrapper } from './Messages.styles';\nimport chatActions from '@iso/redux/chat/actions';\nconst { toggleViewProfile, toggleMobileProfile } = chatActions;\nexport default function Messages() {\n  const dispatch = useDispatch();\n  const { user, userId, selectedChatRoom, messages } = useSelector(\n    state => state.Chat\n  );\n\n  const scrollToBottom = () => {\n    const messageChat = document.getElementById('messageChat');\n    messageChat.scrollTop = messageChat.scrollHeight;\n  };\n  React.useEffect(() => {\n    scrollToBottom();\n  });\n\n  const renderMessage = message => {\n    const isUser = userId === message.sender;\n    const messageUser = isUser ? user : selectedChatRoom.otherUserInfo;\n    if (isUser) {\n      return (\n        <MessageSingle className=\"loggedUser\" key={message.messageTime}>\n          <div className=\"messageContent isUser\">\n            <div className=\"messageContentText\">\n              <p>{message.text}</p>\n            </div>\n            <div className=\"messageTime\">\n              <p>{timeDifference(message.messageTime)}</p>\n            </div>\n          </div>\n          <div className=\"messageGravatar\">\n            <img\n              alt=\"#\"\n              src={messageUser.profileImageUrl}\n              onClick={() => {\n                dispatch(toggleMobileProfile(true));\n                dispatch(toggleViewProfile(messageUser));\n              }}\n            />\n          </div>\n        </MessageSingle>\n      );\n    } else {\n      return (\n        <MessageSingle key={message.messageTime}>\n          <div className=\"messageGravatar\">\n            <img\n              alt=\"#\"\n              src={messageUser.profileImageUrl}\n              onClick={() => {\n                dispatch(toggleMobileProfile(true));\n                dispatch(toggleViewProfile(messageUser));\n              }}\n            />\n          </div>\n          <div className=\"messageContent notUser\">\n            <div className=\"messageContentText\">\n              <p>{message.text}</p>\n            </div>\n            <div className=\"messageTime\">\n              <p>{timeDifference(message.messageTime)}</p>\n            </div>\n          </div>\n        </MessageSingle>\n      );\n    }\n  };\n  return (\n    <MessageChatWrapper id=\"messageChat\">\n      {messages.map(renderMessage)}\n    </MessageChatWrapper>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@iso/components/uielements/button';\nimport notification from '@iso/components/Notification';\nimport actions from '@iso/redux/chat/actions';\nimport { ComposeMessageWrapper, Textarea } from './Messages.styles';\nconst { sendMessage } = actions;\n\nexport default function ComposeMessage(props) {\n  const dispatch = useDispatch();\n\n  const [value, setValue] = React.useState('');\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n  const onKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (value && value.length > 0) {\n        dispatch(sendMessage(value));\n        setValue('');\n      } else {\n        notification('error', 'Please type something');\n      }\n    }\n  };\n  return (\n    <ComposeMessageWrapper>\n      <Textarea\n        autoSize={props.autosize}\n        value={value}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        placeholder=\"Type your message\"\n      />\n      {props.showButton && (\n        <div className=\"sendMessageButton\">\n          <Button type=\"primary\" onClick={() => dispatch(sendMessage(value))}>\n            Send Message\n          </Button>\n        </div>\n      )}\n    </ComposeMessageWrapper>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport Input from '@iso/components/uielements/input';\nimport { Tooltip } from 'antd';\nimport Radio, { RadioGroup } from '@iso/components/uielements/radio';\nimport DatePicker from '@iso/components/uielements/datePicker';\nimport Modal from '@iso/components/Feedback/Modal';\nimport notification from '@iso/components/Notification';\nimport chatActions from '@iso/redux/chat/actions';\nimport { AddUserBtn, Fieldset, Form, Label } from './Messages.styles';\nimport { AddIcon } from '@iso/config/icon.config';\n\nconst dateFormat = 'DD/MM/YYYY';\nconst { updateNewUsersProp, addNewUser } = chatActions;\nexport default function AddNewUser() {\n  const { user, users, addNewUsersProp } = useSelector((state) => state.Chat);\n  const dispatch = useDispatch();\n  const handleCancel = () => {\n    dispatch(updateNewUsersProp({ modalActive: false }));\n  };\n  const initAddUser = () => {\n    dispatch(\n      updateNewUsersProp({\n        modalActive: true,\n        name: 'New User',\n        dob: '22/04/1992',\n        mobileNo: '9429692135',\n        gender: 'Male',\n        language: 'English',\n        profileImageUrl:\n          'https://thumb7.shutterstock.com/display_pic_with_logo/818215/552201991/stock-photo-beautiful-young-grinning-professional-black-woman-in-office-with-eyeglasses-folded-arms-and-552201991.jpg',\n      })\n    );\n  };\n  const userNameExist = (newUser) =>\n    users.findIndex(\n      (user) => user.name.toLowerCase() === newUser.name.toLowerCase()\n    ) !== -1;\n\n  const addUser = () => {\n    if (addNewUsersProp.name) {\n      if (userNameExist(addNewUsersProp)) {\n        notification('error', 'User name already exists');\n      } else {\n        dispatch(addNewUser(user, addNewUsersProp));\n        notification('success', 'New user created successfuly');\n      }\n    } else {\n      notification('error', 'please add new user name');\n    }\n  };\n  const {\n    modalActive,\n    name,\n    dob,\n    mobileNo,\n    gender,\n    language,\n  } = addNewUsersProp;\n  return (\n    <div>\n      <Tooltip placement=\"topRight\" title=\"Add a new user (For demo only)\">\n        <AddUserBtn onClick={initAddUser}>\n          <AddIcon size={17} />\n        </AddUserBtn>\n      </Tooltip>\n\n      <Modal\n        visible={modalActive}\n        onClose={handleCancel}\n        title=\"Add New User\"\n        okText=\"Add User\"\n        onOk={addUser}\n        onCancel={handleCancel}\n      >\n        <Form>\n          <Fieldset>\n            <Label>Name</Label>\n            <Input\n              label=\"Name\"\n              placeholder=\"Enter Name\"\n              value={name || ''}\n              onChange={(event) => {\n                addNewUsersProp.name = event.target.value;\n                dispatch(updateNewUsersProp(addNewUsersProp));\n              }}\n            />\n          </Fieldset>\n\n          <Fieldset>\n            <Label>Mobile</Label>\n            <Input\n              label=\"Mobile\"\n              placeholder=\"Mobile No\"\n              value={mobileNo || ''}\n              onChange={(event) => {\n                addNewUsersProp.mobileNo = event.target.value;\n                dispatch(updateNewUsersProp(addNewUsersProp));\n              }}\n            />\n          </Fieldset>\n\n          <Fieldset>\n            <Label>Gender</Label>\n            <RadioGroup\n              id=\"gender\"\n              name=\"gender\"\n              value={gender}\n              onChange={(event) => {\n                addNewUsersProp.gender = event.target.value;\n                dispatch(updateNewUsersProp(addNewUsersProp));\n              }}\n            >\n              <Radio value=\"Male\">Male</Radio>\n              <Radio value=\"Female\">Female</Radio>\n              <Radio value=\"Other\">Other</Radio>\n            </RadioGroup>\n          </Fieldset>\n\n          <Fieldset>\n            <Label>Language</Label>\n            <Input\n              label=\"Language\"\n              placeholder=\"Language\"\n              value={language || ''}\n              onChange={(event) => {\n                addNewUsersProp.language = event.target.value;\n                dispatch(updateNewUsersProp(addNewUsersProp));\n              }}\n            />\n          </Fieldset>\n\n          <Fieldset>\n            <Label>Date</Label>\n            <DatePicker\n              allowClear={false}\n              format={dateFormat}\n              value={moment(dob, dateFormat)}\n              onChange={(date, dateString) => {\n                addNewUsersProp.dob = dateString;\n                dispatch(updateNewUsersProp(addNewUsersProp));\n              }}\n            />\n          </Fieldset>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AddNewUser from './AddNewUser';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Button from '@iso/components/uielements/button';\nimport HelperText from '@iso/components/utility/helper-text';\nimport chatActions from '@iso/redux/chat/actions';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport {\n  UserListsWrapper,\n  UserLists,\n  SidebarSearchBox,\n  Input,\n  ChatSidebar,\n} from './Messages.styles';\nconst { setSelectedChatroom, toggleMobileList, toggleCompose } = chatActions;\nfunction filteredChatRooms(chatrooms) {\n  return chatrooms.filter(chatroom => chatroom.lastMessageTime > 0);\n}\nexport default function ChatRooms() {\n  const dispatch = useDispatch();\n  const { users, chatRooms, selectedChatRoom } = useSelector(\n    state => state.Chat\n  );\n  const { view } = useSelector(state => state.App);\n  const [currentChatRooms, setCurrentChatRooms] = React.useState(\n    filteredChatRooms(chatRooms)\n  );\n  React.useEffect(() => {\n    setCurrentChatRooms(filteredChatRooms(chatRooms));\n  }, [chatRooms]);\n\n  const currentChatRoom = view === 'DesktopView' ? selectedChatRoom : {};\n\n  const onSearch = event => {\n    const value = event.target.value;\n\n    let searchedChatRooms = filteredChatRooms(chatRooms);\n    if (value.trim()) {\n      searchedChatRooms = searchedChatRooms.filter(chatRoom =>\n        chatRoom.otherUserInfo.name.toLowerCase().includes(value.toLowerCase())\n      );\n    }\n    setCurrentChatRooms(searchedChatRooms);\n  };\n  const singleChatRoom = (chatRoom, index) => {\n    const { otherUserInfo, lastMessage, lastMessageTime } = chatRoom;\n    const { name, profileImageUrl } = otherUserInfo;\n    const selected = currentChatRoom.id === chatRoom.id;\n    const style = {\n      background: selected ? '#f7f7f7' : 'rgba(0,0,0,0)',\n    };\n    const selectChatroom = event => {\n      event.stopPropagation();\n\n      if (!selected) {\n        dispatch(setSelectedChatroom(chatRoom));\n      }\n      if (toggleMobileList) {\n        dispatch(toggleMobileList(false));\n      }\n    };\n    return (\n      <UserLists key={index} style={style} onClick={selectChatroom}>\n        <div className=\"userListsGravatar\">\n          <img\n            alt=\"#\"\n            style={{ width: 45, height: 45 }}\n            src={profileImageUrl}\n          />\n        </div>\n        <div className=\"userListsContent\">\n          <h4>{name}</h4>\n          <div className=\"chatExcerpt\">\n            <p>{lastMessage}</p>\n            <span className=\"userListsTime\">\n              {timeDifference(lastMessageTime)}\n            </span>\n          </div>\n        </div>\n      </UserLists>\n    );\n  };\n  return (\n    <ChatSidebar>\n      <SidebarSearchBox>\n        <Input onChange={onSearch} placeholder=\"Search Contact\" />\n        <AddNewUser />\n      </SidebarSearchBox>\n      <UserListsWrapper>\n        <Scrollbars style={{ height: '100%' }}>\n          {currentChatRooms.length === 0 ? (\n            <HelperText text=\"No Conversation\" className=\"messageHelperText\" />\n          ) : (\n            currentChatRooms.map(singleChatRoom)\n          )}\n        </Scrollbars>\n      </UserListsWrapper>\n\n      {users.length > 0 && (\n        <div className=\"ComposeMessageButton\">\n          <Button onClick={() => dispatch(toggleCompose())} type=\"primary\">\n            Compose\n          </Button>\n        </div>\n      )}\n    </ChatSidebar>\n  );\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst ViewProfileWrapper = styled.div`\n  background: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  overflow: auto;\n  position: absolute;\n  right: 0;\n  width: 95%;\n  height: 100%;\n\n  .viewProfileTopBar {\n    background: ${palette('grayscale', 4)};\n    border-bottom: 1px solid ${palette('border', 0)};\n    padding: 25px 20px 25px 30px;\n    display: flex;\n    justify-content: space-between;\n    line-height: 1;\n\n    span {\n      margin: 0;\n      margin-left: 15px;\n      cursor: pointer;\n      i {\n        font-size: 14px;\n        font-weight: normal;\n      }\n    }\n  }\n  .viewProfileContent {\n    padding: 30px 30px 0;\n  }\n  .viewProfileImage {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  h1 {\n    font-size: 21px;\n    text-align: center;\n    font-weight: 300;\n    margin-bottom: 30px;\n    margin-top: 10px;\n    color: #212121;\n  }\n  img {\n    height: 120px;\n    border-radius: 6px;\n  }\n  .viewProfileQuickInfo {\n    border-top: 1px solid ${palette('border', 2)};\n    padding-top: 40px;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nconst SingleInfoWrapper = styled.div`\n  display: flex;\n\n  .viewProfileTitle {\n    width: 35%;\n    font-size: 13px;\n    font-weight: 500;\n    font-weight: light;\n    color: ${palette('text', 0)};\n    margin-bottom: 30px;\n  }\n  .viewProfileValue {\n    width: 65%;\n    text-align: right;\n    font-size: 13px;\n    color: ${palette('text', 1)};\n    margin-bottom: 30px;\n  }\n`;\n\nexport { ViewProfileWrapper, SingleInfoWrapper };\n","import React from 'react';\nimport { ViewProfileWrapper, SingleInfoWrapper } from './ViewProfile.style';\nimport { CloseIcon } from '@iso/config/icon.config';\n\nconst SingleInfo = ({ title, value }) => (\n  <SingleInfoWrapper>\n    <span className=\"viewProfileTitle\">{title}</span>\n    <span className=\"viewProfileValue\">{value}</span>\n  </SingleInfoWrapper>\n);\nexport default function ({\n  viewProfile,\n  toggleViewProfile,\n  toggleMobileProfile,\n}) {\n  if (!viewProfile) {\n    return null;\n  }\n  const {\n    name,\n    dob,\n    mobileNo,\n    gender,\n    language,\n    profileImageUrl,\n  } = viewProfile;\n  return (\n    <ViewProfileWrapper>\n      <div className=\"viewProfileTopBar\">\n        Contact Info\n        <span\n          onClick={() => {\n            if (toggleMobileProfile) {\n              toggleMobileProfile(false);\n            }\n            toggleViewProfile(false);\n          }}\n        >\n          <CloseIcon size={14} />\n        </span>\n      </div>\n      <div className=\"viewProfileContent\">\n        <div className=\"viewProfileImage\">\n          <img alt=\"#\" src={profileImageUrl} />\n          <h1>{name}</h1>\n        </div>\n        <div className=\"viewProfileQuickInfo\">\n          <SingleInfo title=\"Name\" value={name} />\n          <SingleInfo title=\"Date of Birth\" value={dob} />\n          <SingleInfo title=\"Mobile No\" value={mobileNo} />\n          <SingleInfo title=\"Gender\" value={gender} />\n          <SingleInfo title=\"Language\" value={language} />\n        </div>\n      </div>\n    </ViewProfileWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst UserItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  .userImg {\n    width: 35px;\n    height: 35px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    border-radius: 50%;\n    margin-right: 15px;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n\n  .suggetionText {\n    font-size: 13px;\n    color: ${palette('text', 0)};\n    font-weight: 500;\n    margin: 0;\n  }\n`;\n\nexport default UserItem;\n","import React from 'react';\nimport AutoComplete, { AutoCompleteOption } from '../uielements/autocomplete';\nimport UserItem from './InputName.style';\n\nexport default function(props) {\n  const [state, setState] = React.useState({\n    value: '',\n    result: [],\n  });\n\n  const handleSearch = value => {\n    const result = [];\n    if (value) {\n      props.users.forEach(user => {\n        if (user.name.toLowerCase().indexOf(value.toLowerCase()) > -1) {\n          result.push(user);\n        }\n      });\n    }\n    setState({ ...state, result, value });\n  };\n  const onSelect = id => {\n    if (id) {\n      state.result.forEach(user => {\n        if (user.id === id) {\n          setState({ ...state, value: user.name });\n        }\n      });\n    }\n  };\n  const { result, value } = state;\n  return (\n    <AutoComplete\n      value={value}\n      onSelect={onSelect}\n      onSearch={handleSearch}\n      placeholder=\"find your buddy\"\n      style={{ marginBottom: 10 }}\n    >\n      {result.map(user => (\n        <AutoCompleteOption key={user.id} style={{ display: 'flex' }}>\n          <UserItem\n            onClick={() => {\n              setState({ ...state, value: user.name, result: [] });\n              props.setComposedId(user.id);\n            }}\n          >\n            <div className=\"userImg\">\n              <img alt=\"#\" src={user.profileImageUrl} />\n            </div>\n\n            <span className=\"suggetionText\">{user.name}</span>\n          </UserItem>\n        </AutoCompleteOption>\n      ))}\n    </AutoComplete>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '@iso/components/Feedback/Modal';\nimport InputName from '@iso/components/Chat/InputName';\nimport ChatRooms from './ChatRooms';\nimport Messages from './Messages';\nimport ComposeMessage from './ComposeMessage';\nimport ViewProfile from '@iso/components/Chat/ViewProfile';\nimport Loader from '@iso/components/utility/loader';\nimport {\n  ChatWindow,\n  ChatBox,\n  Button,\n  MessageDialog,\n  ToggleViewProfile,\n} from './Messages.styles';\n\nimport chatActions from '@iso/redux/chat/actions';\nimport { ArrowLeftIcon } from '@iso/config/icon.config';\n\nconst {\n  toggleCompose,\n  setComposedId,\n  toggleViewProfile,\n  chatInit,\n  mobileActiveList,\n  mobileActiveProfile,\n  toggleMobileList,\n  toggleMobileProfile,\n} = chatActions;\nexport default function MobileView({ className }) {\n  const dispatch = useDispatch();\n  const {\n    loading,\n    users,\n    userId,\n    openCompose,\n    selectedChatRoom,\n    viewProfile,\n  } = useSelector((state) => state.Chat);\n  React.useEffect(() => {\n    if (!users) {\n      dispatch(chatInit(userId));\n    }\n  });\n\n  if (loading) {\n    return <Loader />;\n  }\n  let CurrentView = <Loader />;\n  if (mobileActiveList) {\n    CurrentView = (\n      <div>\n        <Modal\n          visible={openCompose}\n          onCancel={() => dispatch(toggleCompose())}\n          title=\"Compose Message\"\n          footer={null}\n        >\n          <MessageDialog>\n            <h5>Starting your chat with...</h5>\n            <InputName\n              users={users}\n              setComposedId={() => dispatch(setComposedId())}\n              className={className}\n            />\n            <ComposeMessage\n              autosize={{ minRows: 5, maxRows: 9 }}\n              showButton\n              rows={8}\n            />\n          </MessageDialog>\n        </Modal>\n        <ChatRooms toggleMobileList={() => dispatch(toggleMobileList())} />\n      </div>\n    );\n  } else if (mobileActiveProfile) {\n    CurrentView = (\n      <ViewProfile\n        viewProfile={viewProfile}\n        toggleViewProfile={() => dispatch(toggleViewProfile())}\n        toggleMobileProfile={() => dispatch(toggleMobileProfile())}\n      />\n    );\n  } else {\n    CurrentView = (\n      <ChatBox className=\"ChatBox\">\n        {selectedChatRoom && (\n          <ToggleViewProfile>\n            <Button onClick={() => dispatch(toggleMobileList(true))}>\n              <ArrowLeftIcon size={18} />\n            </Button>\n            <span\n              onClick={() => {\n                dispatch(toggleViewProfile(selectedChatRoom.otherUserInfo));\n                dispatch(toggleMobileProfile(true));\n              }}\n            >\n              {selectedChatRoom.otherUserInfo.name}\n            </span>\n          </ToggleViewProfile>\n        )}\n\n        <Messages toggleMobileProfile={() => dispatch(toggleMobileProfile())} />\n        <ComposeMessage\n          InputProps={{\n            disableUnderline: true,\n          }}\n        />\n      </ChatBox>\n    );\n  }\n  return <ChatWindow className=\"ChatWindow\">{CurrentView}</ChatWindow>;\n}\n","import { notification } from 'antd';\n\nconst createNotification = (type, message, description) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\nexport default createNotification;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntRadiobox = (ComponentName) => styled(ComponentName)`\n  &.ant-radio-wrapper,\n  .ant-radio-wrapper,\n  &.ant-radio-button-wrapper {\n    font-size: 13px;\n    color: ${palette('text', 1)};\n\n    .ant-radio-inner {\n      &:after {\n        width: 6px;\n        height: 6px;\n        top: 4px;\n        left: 4px;\n        background-color: ${palette('primary', 0)};\n        border-radius: 50%;\n      }\n    }\n\n    .ant-radio-checked .ant-radio-inner,\n    .ant-radio-indeterminate .ant-radio-inner {\n      border-color: ${palette('primary', 0)};\n    }\n\n    .ant-radio:hover .ant-radio-inner,\n    .ant-radio-input:focus + .ant-radio-inner {\n      border-color: ${palette('primary', 0)};\n    }\n\n    .ant-radio-disabled .ant-radio-inner:after {\n      background-color: #ccc;\n    }\n\n    &:hover {\n      .ant-radio-inner {\n        border-color: ${palette('primary', 0)};\n      }\n    }\n\n    .ant-radio-checked {\n      .ant-radio-inner {\n        &:after {\n          transform: scale(1);\n        }\n      }\n    }\n  }\n\n  .ant-radio-button-wrapper {\n    &.ant-radio-button-wrapper-checked {\n      color: #ffffff;\n      background-color: ${palette('primary', 0)};\n      border-color: ${palette('primary', 0)};\n\n      &:not(.ant-radio-button-wrapper-disabled) {\n        /* background-color: ${palette('primary', 0)}; */\n        border-color: ${palette('primary', 0)};\n\n        &:hover {\n          /* background-color: ${palette('primary', 0)}; */\n          border-color: ${palette('primary', 0)};\n        }\n      }\n\n    }\n    :focus{\n      outline:none;\n    }\n  }\n`;\n\nexport default AntRadiobox;\n","import { Radio } from 'antd';\nimport AntRadiobox from './styles/radiobox.style';\n\nconst RadioBox = AntRadiobox(Radio);\nconst RadioGroup = AntRadiobox(Radio.Group);\nconst RadioButton = AntRadiobox(Radio.Button);\n\nexport default RadioBox;\nexport { RadioGroup, RadioButton };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntAutoComplete = ComponentName => styled(ComponentName)`\n  width: 100%;\n\n  &.ant-select {\n    .ant-select-selection {\n      &.ant-select-selection--single {\n        height: 35px;\n\n        .ant-select-selection__rendered {\n          line-height: 35px;\n          margin: 0;\n\n          .ant-select-selection__placeholder,\n          .ant-select-search__field__placeholder {\n            top: 8px;\n            margin: 0 10px;\n            left: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\n            right: ${props =>\n              props['data-rtl'] === 'rtl' ? '9px' : 'inherit'};\n            color: ${palette('grayscale', 1)};\n          }\n\n          .ant-input {\n            padding: 4px 10px;\n            width: 100%;\n            height: 35px;\n            font-size: 13px;\n            text-align: ${props =>\n              props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n            line-height: 1.5;\n            color: ${palette('text', 1)};\n            border: 1px solid ${palette('border', 0)};\n            transition: all 0.3s;\n\n            &:focus {\n              border-color: ${palette('primary', 0)};\n              outline: 0;\n              box-shadow: 0 0 0 2px ${palette('primary', 3)};\n            }\n\n            &:hover {\n              border-color: ${palette('primary', 0)};\n            }\n          }\n        }\n      }\n    }\n\n    .ant-select-search__field {\n      padding: 10px;\n    }\n  }\n`;\n\nconst AntAutoCompleteOption = ComponentName => styled(ComponentName)`\n  color: #000000;\n`;\n\nexport { AntAutoComplete, AntAutoCompleteOption };\n","import { AutoComplete } from 'antd';\nimport { AntAutoComplete } from './styles/autoComplete.style';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst WDAutoCompletes = AntAutoComplete(AutoComplete);\nconst AutoCompletes = WithDirection(WDAutoCompletes);\nconst AutoCompleteOption = AutoComplete.Option;\n\nexport default AutoCompletes;\nexport { AutoCompleteOption };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius } from '@iso/lib/helpers/style_utils';\n\nconst AntDatePicker = (ComponentName) => styled(ComponentName)`\n  &.ant-picker {\n    height: 35px;\n  }\n  .ant-input {\n    padding: 4px 10px;\n    width: 100%;\n    height: 35px;\n    cursor: text;\n    font-size: 13px;\n    line-height: 1.5;\n    color: ${palette('text', 1)};\n    background-color: #fff;\n    background-image: none;\n    border: 1px solid ${palette('border', 0)};\n    ${borderRadius('4px')};\n    ${transition()};\n\n    &:focus {\n      border-color: ${palette('primary', 0)};\n    }\n\n    &::-webkit-input-placeholder {\n      color: ${palette('grayscale', 0)};\n    }\n\n    &:-moz-placeholder {\n      color: ${palette('grayscale', 0)};\n    }\n\n    &::-moz-placeholder {\n      color: ${palette('grayscale', 0)};\n    }\n    &:-ms-input-placeholder {\n      color: ${palette('grayscale', 0)};\n    }\n  }\n`;\n\nexport default AntDatePicker;\n","import { DatePicker } from 'antd';\nimport AntDatePicker from './styles/datePicker.style';\n\nconst Datepicker = AntDatePicker(DatePicker);\nconst DateRangepicker = AntDatePicker(DatePicker.RangePicker);\n\nexport default Datepicker;\nexport { DateRangepicker };\n"],"sourceRoot":""}